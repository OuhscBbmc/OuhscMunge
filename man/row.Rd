% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/row.R
\name{row}
\alias{row}
\alias{row_sum}
\alias{row_mean}
\title{Find the sum of selected columns within a row}
\usage{
row_sum(
  d,
  columns_to_process = character(0),
  pattern = "",
  new_column_name = "row_sum",
  threshold_proportion = 0.75,
  nonmissing_count_name = NA_character_,
  verbose = FALSE
)

row_mean(
  d,
  columns_to_process = character(0),
  pattern = "",
  new_column_name = "row_mean",
  threshold_proportion = 0.75,
  nonmissing_count_name = NA_character_,
  verbose = FALSE
)
}
\arguments{
\item{d}{The data.frame containing the values to sum. Required.}

\item{columns_to_process}{A character vector containing the columns
names to process (\emph{e.g.}, to average or to sum).
If empty, \code{pattern} is used to select columns. Optional.}

\item{pattern}{A regular expression pattern passed to \code{\link[base:grep]{base::grep()}}
(with \code{perl = TRUE}).  Optional}

\item{new_column_name}{The name of the new column that represents the sum
of the specified columns.  Required.}

\item{threshold_proportion}{Designates the minimum proportion of columns
that have a nonmissing values (within each row) in order to return a sum.
Required; defaults to to 0.75.
In other words, by default, if less than 75\% of the specified
cells are missing within a row, the row sum will be \code{NA}.}

\item{nonmissing_count_name}{If a non-NA value is passed,
a second column will be added to \code{d} that contains the row's count
of nonmissing items among the selected columns.
Must be a valid column name.  Optional.}

\item{verbose}{a logical value to designate if extra information is
displayed in the console,
such as which columns are matched by \code{pattern}.}
}
\value{
The data.frame \code{d},
with the additional column containing the row sum.
If a valid value is passed to \code{nonmissing_count_name},
a second column will be added as well.
}
\description{
Sums across columns within a row,
while accounting for nonmissingness.
Specify the desired columns by passing their explicit column names or
by passing a regular expression to matches the column names.
}
\details{
If the specified columns are all logicals or integers,
the new column will be an \link{integer}.
Otherwise the new column will be a \link{double}.
}
\examples{
mtcars |>
  OuhscMunge::row_sum(
    columns_to_process = c("cyl", "disp", "vs", "carb"),
    new_column_name    = "engine_sum"
  )

mtcars |>
  OuhscMunge::row_sum(
    columns_to_process     = c("cyl", "disp", "vs", "carb"),
    new_column_name        = "engine_sum",
    nonmissing_count_name  = "engine_nonmissing_count"
  )

mtcars |>
  OuhscMunge::row_mean(
    columns_to_process     = c("cyl", "disp", "vs", "carb"),
    new_column_name        = "engine_mean",
    nonmissing_count_name  = "engine_nonmissing_count"
  )

if (require(tidyr))
  tidyr::billboard |>
    OuhscMunge::row_sum(
      pattern               = "^wk\\\\d{1,2}$",
      new_column_name       = "week_sum",
      threshold_proportion  = .1,
      verbose               = TRUE
    ) |>
    dplyr::select(
      artist,
      date.entered,
      week_sum,
    )

  tidyr::billboard |>
    OuhscMunge::row_sum(
      pattern               = "^wk\\\\d$",
      new_column_name       = "week_sum",
      verbose               = TRUE
    ) |>
    dplyr::select(
      artist,
      date.entered,
      week_sum,
    )
}
\author{
Will Beasley
}
