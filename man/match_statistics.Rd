% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/match-statistics.R
\name{match_statistics}
\alias{match_statistics}
\alias{match_statistics_display}
\title{Create explicit factor level for missing values.}
\usage{
match_statistics(d_parent, d_child, join_columns)
}
\arguments{
\item{d_parent}{A \code{data.frame} of the parent table.}

\item{d_child}{A \code{data.frame} of the child table.}

\item{join_columns}{The \code{character} vector of the column names used to join to parent and child tables.}
}
\value{
A \code{numeric} array of the following elements:
\itemize{
\item \code{parent_in_child}          The count of parent records found in the child table.
\item \code{parent_not_in_child}      The count of parent records \emph{not} found in the child table.
\item \code{parent_na_any}            The count of parent records with a \code{NA} in at least one of the join columns.
\item \code{deadbeat_proportion}      The proportion of parent records \emph{not} found in the child table.
\item \code{child_in_parent}          The count of child records found in the parent table.
\item \code{child_not_in_parent}      The count of child records \emph{not} found in the parent table.
\item \code{child_na_any}             The proportion of child records \emph{not} found in the parent table.
\item \code{orphan_proportion}        The count of child records with a \code{NA} in at least one of the join columns.
}
}
\description{
Missing values are converted to a factor level.  This explicit assignment can reduce the chances that missing values are inadvertently ignored.
It also allows the presence of a missing to become a predictor in models.
}
\details{
If a nonexistent column is passed to \code{join_columns}, an error will be thrown naming the violating column name.

More information about the 'parent' and 'child' terminology and concepts can be found in the
\href{https://en.wikipedia.org/wiki/Hierarchical_database_model}{Hierarchical Database Model}
Wikipedia entry, among many other sources.
}
\note{
The \code{join_columns} parameter is passed directly to \url{dplyr::semi_join()} and \url{dplyr::anti_join()}.
}
\examples{
ds_parent <- data.frame(
  parent_id         = 1L:10L,
  letter            = rep(letters[1:5], each=2),
  index             = rep(1:2, times=5),
  dv                = runif(10),
  stringsAsFactors  = FALSE
)
ds_child <- data.frame(
  child_id          = 101:140,
  parent_id         = c(4, 5, rep(6L:14L, each=4), 15, 16),
  letter            = rep(letters[3:12], each=4),
  index             = rep(1:2, each=2, length.out=40),
  dv                = runif(40),
  stringsAsFactors  = FALSE
)

#Match on one column:
match_statistics(ds_parent, ds_child, join_columns="parent_id")

#Match on two columns:
match_statistics(ds_parent, ds_child, join_columns=c("letter", "index"))

## Produce better format for humans to read
match_statistics_display(ds_parent, ds_child, join_columns="parent_id")
match_statistics_display(ds_parent, ds_child, join_columns=c("letter", "index"))
}
\author{
Will Beasley
}
